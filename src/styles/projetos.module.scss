@import '@/styles/common/colors.scss';

.project {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 40px;
  padding-bottom: 40px;
}

.contentContainer {
  align-self: center;
  display: flex;
  gap: 40px;
  width: 100%;
  max-width: $max-width;
  padding: 0px 20px;
}

.photosSlide {
  flex: 1.4;

  .photoContainer {
    img {
      width: 100%;
      height: 360px;
      object-fit: contain;
    }
  }
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 5px;
  height: 100%;
  min-height: 360px;
  justify-content: space-between;
  padding: 10px 20px;
  color: $white;

  .title {
    font-size: 2.2rem;
  }

  .description {
    text-align: justify;
    line-height: 1.8;
  }

  a {
    display: inline-block;
    max-width: 250px;
    padding: 12px 15px;
    font-size: 1rem;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: $white;
    background-image: transparent;
    border: 2px solid $color3;
    border-radius: 5px;
    text-shadow: 1px 1px 1px rgba($color: $color4, $alpha: 0.3);
    transition: all 0.2s ease-in;

    &:hover {
      background-color: $color1;
      transform: translateY(-5px);
    }
  }
}

.infosSection {
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 0px 20px;
  color: $white;

  .infosContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    gap: 20px;

    .infos {

      ul {
        padding-left: 20px;
        line-height: 2;
      }
    }
  }
}

@media only screen and (max-width: 715px) {
  .contentContainer {
    flex-direction: column;

    .photosSlide {
      flex: unset;
      width: 100%;

      .photoContainer {
        img {
          height: 45vw;
        }
      }
    }
  }

  .content {
    gap: 30px;
    height: unset;
  }
}

@media only screen and (max-width: 320px) {
  .contentContainer {
    padding: 0px 5px;
  }

  .content {
    padding: 10px 5px;
  }
}

//animacao content
@property --angle {
  syntax: '<angle>';
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: true;
}

.content {
  --d: 10000ms;
	--gradX: 100%;
	--gradY: 50%;
	--c1: rgba(168, 239, 255, 1);
	--c2: transparent;

	border: 0.35rem solid;
	border-image: conic-gradient(from var(--angle), var(--c2), var(--c1) 0.1turn, var(--c1) 0.15turn, var(--c2) 0.25turn) 30;
	animation: borderRotate var(--d) linear infinite forwards;
}

@keyframes borderRotate {
	100% {
		--angle: 450deg;
	}
}